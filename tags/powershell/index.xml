<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Powershell on Intellegence Modifer</title>
        <link>https://intelligencemodifier.com/tags/powershell/</link>
        <description>Recent content in Powershell on Intellegence Modifer</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 22 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://intelligencemodifier.com/tags/powershell/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>The New ISE - Visual Studio Code</title>
        <link>https://intelligencemodifier.com/p/new-ise-visualstudiocode/</link>
        <pubDate>Fri, 22 Dec 2017 00:00:00 +0000</pubDate>
        
        <guid>https://intelligencemodifier.com/p/new-ise-visualstudiocode/</guid>
        <description>&lt;p&gt;Back around late 2013 when i started looking at PowerShell, I was a Help Desk agent and just looking to save some time on calls, maybe a faster way to look up user accounts then the hardly ever improved Active Directory Users and Computers UI. Soon however, with ample help from co-workers, I started to look at using scripting to improve our imaging process for laptops/desktops. To remove manual steps that just wasted our time.  This meant i needed a new tool, I needed to be ale setup logic flows with IF/ELSE or read in parameters such as Service Tag number among other things.  So started my journey to find a Power Shell script editor.&lt;/p&gt;
&lt;p&gt;The choice of which script editor to use is never easy when your starting your journey to learn PowerShell. Every PowerShell user that has come before you has their favorite and probably at least one they feel is equivalent to a dumpster fire. Eventually however you make a choice, because you get beyond running single commands in a standard PS shell.&lt;/p&gt;
&lt;p&gt;At the time, from what i remember, the 2 main choices among my coworkers were the native PowerShell ISE that comes with the Windows OS and PowerGUI (which as of writing this seems to have been lost in the spin-off Dell performed of the QUEST software in 2016). The ISE is a great starting point, it is already installed if you have PowerShell, there is very little setup needed and it just works. PowerGUI had a few nice features, like a debugging mode that I personally was never ever able to replicate inside the ISE that allowed me to step through my script and see how variables fill in to help spot logic issues.&lt;/p&gt;
&lt;p&gt;From 2014 until probably early this year mostly stuck to the ISE. As much as I enjoyed some features of PowerGUI it was very slow loading, and Dell seemed more than happy to let it die on the vine, never providing updates. I had a quick fling with PowerShell Studio, while i was designing a wrapper for the Microsoft User State Migration Tool, for my last job and in my current role i haven&amp;rsquo;t had a need for a UI designer for PowerShell. However, there was a new challenger approaching, and it was going to change a lot of what I wanted from my scripting editor.&lt;/p&gt;
&lt;h2 id=&#34;enter-visual-studio-code-by-the-new-microsoft&#34;&gt;Enter Visual Studio Code by the &amp;ldquo;new&amp;rdquo; Microsoft
&lt;/h2&gt;&lt;p&gt;In early 2016, Microsoft release .Net Core. An free to use, open-source, cross-platform  version of the .Net framework that had for so long been a Windows only thing. A few months later the next open-source project dropped from Microsoft, Visual Studio Code.  With this, Microsoft was taking the core script editor from a product they get ALOT of money for and making it another free, open-source, cross-platform  product. I downloaded one of the earlier builds and saw potential, but between my skill-set at the time and how green the product was I just couldn&amp;rsquo;t make the jump and sacrifice the speed and ease i could work with ISE.&lt;/p&gt;
&lt;p&gt;I continued to use the ISE, and it turned out the team behind VSC were working very hard at refining this new tool of theirs. In late November-December 2016 VSC came up again at work. I don&amp;rsquo;t really remember how, but upon looking into it again we found that it had changed quite a bit i some wonderful ways. The user experience had been improved,  An array of plugins were available to bring things like Intellisense, and other beloved tools from the ISE over to this new editor.&lt;/p&gt;
&lt;p&gt;It didn&amp;rsquo;t happen right away, but VSC has now all but replaced ISE in our team (for the most part). I think it quickly showed its true strength, not being a piece of the Operating System.  The ISE is still very strong, mainly because as a Windows server admin, i would be hard pressed to login to a system without the ISE right there. Which if i need to tweak a script quick that lives on a service for a scheduled task is awesome.  However, because of how it was integrated at the OS level you would rarely, if ever get updates for it.  Visual Studio Code being a separate application, and being so open meant that in the year that I have been using it, features have been rolling in month by month (faster if you are part of the Insiders build ring from Microsoft).&lt;/p&gt;
&lt;p&gt;Several of the &amp;ldquo;must install&amp;rdquo; plugins from when I started using it simply don&amp;rsquo;t exist any more, because the VSC team baked those very helpful features into the program. The native Git support (after installing the Git framework separately) allowed our team to quickly move into have a code repository. For those less familiar with PowerShell, Intellisense is baked in, and it also has PSScriptAnalyzer, a best practices analyzer, built in as well which means this editor can help you learn. The best part being that the number of settings you can tweak throughout and the frequent updates and vast add-on library this editor evolves with you as your skills increase. You can even set your space vs tab preference or decide if your starting curly bracket &amp;ldquo;{&amp;rdquo; goes on the current line you are one or on a new line&amp;hellip; but those are wars for another day.&lt;/p&gt;
&lt;p&gt;Its not perfect, but it improves with every build (well except for the whole icon color issue of October 2017: &lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/blogs/2017/10/24/theicon&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://code.visualstudio.com/blogs/2017/10/24/theicon&lt;/a&gt;) and I think its worth giving a shot no matter what skill level you are at with PowerShell or some other scripting language.&lt;/p&gt;
&lt;p&gt;Visual Studio Code on GitHub: &lt;a class=&#34;link&#34; href=&#34;https://github.com/Microsoft/vscode&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Microsoft/vscode&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microsoft product page and download links: &lt;a class=&#34;link&#34; href=&#34;https://code.visualstudio.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://code.visualstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;*&lt;em&gt;Release Dates are based of the product&amp;rsquo;s Wikipedia entries or other Google-Fu, i apologize if they are not 100% accurate&lt;/em&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Connect-VIServer -Part 1</title>
        <link>https://intelligencemodifier.com/p/connect-viserver-part-1/</link>
        <pubDate>Sat, 07 Oct 2017 00:00:00 +0000</pubDate>
        
        <guid>https://intelligencemodifier.com/p/connect-viserver-part-1/</guid>
        <description>&lt;h2 id=&#34;installing-and-connecting&#34;&gt;Installing and Connecting
&lt;/h2&gt;&lt;p&gt;Before we get to far,you will need to have PowerCLI installed.  You can probably get away with a an older version but as of my writing this I have only validated these commands using PowerShell 5.1 and PowerCLI 6.5.x&lt;/p&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Basic knowledge of PowerShell&lt;/li&gt;
&lt;li&gt;Uninstall any versions older than 6.5 from the Windows Control Panel&lt;/li&gt;
&lt;li&gt;Update PowerShell (WMF) 5.1 - Info Here&lt;/li&gt;
&lt;li&gt;If this is your first time installing anything via Find-Module and Install-Module, you will most likely be prompted to install the Nuget module when you run the commands for the first time.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;installing-powercli-from-the-psgallery&#34;&gt;Installing PowerCLI from the PSGallery
&lt;/h3&gt;&lt;p&gt;Starting with version 6.5, VMware has stopped delivering PowerCLI via MSI installer. They have instead embraced the more standard delivery of PowerShell Modules via Microsoft&amp;rsquo;s PSGallery. This has the benefits of making the module easier to install on new computers, and easier to update when a new version is released. Also by using a more standard setup for the module, this means you no longer have to launch a special PowerCLI shell. The PowerCLI module is loaded right into the normal PowerShell window making thinks like scripts much less complicated. For users of previous versions, as mentioned above in the prerequisites, need to manually uninstall all old version as the new Install method is not capable of doing this. Now lets get installing.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a PowerShell prompt in Administrator Mode.&lt;/li&gt;
&lt;li&gt;Use the following command to Find PowerCLI out on PSGallery
&lt;code&gt;Find-Module -Name vmware.powercli&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You should have a result like the one below:
&lt;img src=&#34;https://intelligencemodifier.com/p/connect-viserver-part-1/Find-Module.png&#34;
	width=&#34;839&#34;
	height=&#34;58&#34;
	srcset=&#34;https://intelligencemodifier.com/p/connect-viserver-part-1/Find-Module_hu1d7b9c62c4342cf54269af3c3f04e766_2319_480x0_resize_box_3.png 480w, https://intelligencemodifier.com/p/connect-viserver-part-1/Find-Module_hu1d7b9c62c4342cf54269af3c3f04e766_2319_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34; &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1446&#34;
		data-flex-basis=&#34;3471px&#34;
	
&gt;&lt;/li&gt;
&lt;li&gt;Now to install the module use the following command, which will then ask you to confirm you want to install the module from an &amp;ldquo;Untrusted Repository&amp;rdquo;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;Find-Module -Name vmware.powercli | Install-Module -AllowClobber&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://intelligencemodifier.com/p/connect-viserver-part-1/Confirm&amp;#43;Install.png&#34;
	width=&#34;807&#34;
	height=&#34;73&#34;
	srcset=&#34;https://intelligencemodifier.com/p/connect-viserver-part-1/Confirm&amp;#43;Install_hu587614982567aa3f7f812132e0b8c23d_4963_480x0_resize_box_3.png 480w, https://intelligencemodifier.com/p/connect-viserver-part-1/Confirm&amp;#43;Install_hu587614982567aa3f7f812132e0b8c23d_4963_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34; &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1105&#34;
		data-flex-basis=&#34;2653px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;You will now see PowerShell download and install PowerCL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://intelligencemodifier.com/p/connect-viserver-part-1/Installing.png&#34;
	width=&#34;750&#34;
	height=&#34;90&#34;
	srcset=&#34;https://intelligencemodifier.com/p/connect-viserver-part-1/Installing_huf66ce9745625c2c64dd3d8e5879cce2f_29255_480x0_resize_box_3.png 480w, https://intelligencemodifier.com/p/connect-viserver-part-1/Installing_huf66ce9745625c2c64dd3d8e5879cce2f_29255_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34; &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;833&#34;
		data-flex-basis=&#34;2000px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;Once the progress bars disappear, you are now ready to connect to your VMware environment via PowerCLI! Which I will cover in part 2.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
