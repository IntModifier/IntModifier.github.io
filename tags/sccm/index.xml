<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Sccm on Intellegence Modifer</title>
        <link>https://intelligencemodifier.com/tags/sccm/</link>
        <description>Recent content in Sccm on Intellegence Modifer</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 02 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://intelligencemodifier.com/tags/sccm/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SCCM Patching Kickstart Script</title>
        <link>https://intelligencemodifier.com/p/sccm-patching-kickstart-script/</link>
        <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://intelligencemodifier.com/p/sccm-patching-kickstart-script/</guid>
        <description>&lt;h2 id=&#34;solving-problems&#34;&gt;Solving Problems
&lt;/h2&gt;&lt;p&gt;A while back I had the need at my day job to help stream line our Windows Server patching process.  We had moved to using SCCM and Maintenance Windows but due to business requirements were not able to allow software updates to be installed too far ahead of time and just sit at PENDING REBOOT.&lt;/p&gt;
&lt;p&gt;Unfortunately, SCCM  doesn’t really give you a lot of room for fine tuning, and none of the out of box options fit all our requirements. So My coworkers and I started look at various options to get around this.  After several attempts we settled on a “kick-start” script and scheduled task to be installed on needed systems.&lt;/p&gt;
&lt;p&gt;Code can be found on my &lt;a class=&#34;link&#34; href=&#34;https://github.com/IntModifier/PowerShell/tree/master/sccm_software_update_kickstart&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-run-down&#34;&gt;Quick Run Down
&lt;/h2&gt;&lt;p&gt;We installed the script and a scheduled task to run it over and over on the needed systems using SCCM itself. Once installed, the script runs as SYSTEM every hour and starts to check the WMI name space on the local system for any registered maintenance windows. The script currently look for any MWs coming up between 4 and 2 hours away. Once it gets within 4 hours of the next MW, it then queries the SCCM Software Center for all pending updates and then triggers the installs to start (all through WMI again).  Once it triggers patching it writes an event to the Event Log letting you know when it started patches.&lt;/p&gt;
&lt;p&gt;As long as you have reboots blocked by your Patching/Maintenance Window rules you should be all set.&lt;/p&gt;
&lt;p&gt;The script isn’t perfect but it was able to shave hours off outage time in some cases for us, so I wanted to put this out publicly in case it can help anyone else trim down working on the weekends.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
